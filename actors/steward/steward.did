type RejectionCode = variant {
  NoError;
  CanisterError;
  SysTransient;
  DestinationInvalid;
  Unknown;
  SysFatal;
  CanisterReject;
};
type Result = variant { Ok : text; Err : WalletError };
type Result_1 = variant { Ok : bool; Err : WalletError };
type UpdateKeyRequest = record { new_key : text; old_key : text };
type WalletError = variant {
  ECDSAKeyUpdateError;
  DeserializeError;
  InvalidTransaction;
  InvalidPrincipal : principal;
  ECDSAKeyNotFound : text;
  ECDSAKeyAlreadyExists : text;
  CreateWalletError : record { msg : text };
  ICCallError : record { RejectionCode; text };
  Secp256k1Error : text;
  BitcoinAddressError : text;
};
service : {
  get_ecdsa_key : () -> (Result) query;
  register_ecdsa_key : (text) -> (Result_1);
  update_ecdsa_key : (UpdateKeyRequest) -> (Result_1);
}
